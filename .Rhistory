getwd()
myD
# Math 564 project
# read data
setwd("C:/Users/Jin/Desktop/MATH564Project")
myD<-read.csv("/kc_house_data.csv",stringsAsFactors = FALSE)
getwd
getwd()
myD<-read.csv("kc_house_data.csv",stringsAsFactors = FALSE)
myD
myD['date']
myD['date'] <- as.Date(myD['date'])
str(myD[])
as.Date(myD['date'])
library(lubridate)
ymd(myD$date)
toString(myD$date)
substring(myD$date, 0, 7)
substring(myD$date, 0, 8)
myD$date <- as.Date(substring(myD$date, 0, 8))
myD$date <- as.Date(substring(myD$date, 0, 8), "%Y/%m/%d")
View(myD)
as.Date(substring("20140101", 0, 8), "%Y/%m/%d")
as.Date("20140101", "%Y/%m/%d")
myD$date <- as.Date(substring(myD$date, 0, 8), "%Y%m%d")
View(myD)
View(myD)
as.Date("20140101", "%Y%m%d")
myD<-read.csv("kc_house_data.csv",stringsAsFactors = FALSE)
myD$date <- as.Date(substring(myD$date, 0, 8), "%Y%m%d")
write.csv(myD, file = "kc_house_data_cleaned.csv")
str(myD)
summary(myD)
# approach the data with a easy linear model
basic_fit <- lm(price~., data = myD)
basic_fit
summary(basic_fit)
# pair matrix
cor(myD)
myD[, -1]
myD <- myD[, -1]
summary(myD)
str(myD)
# pair matrix without dates
cor(myD[,-1])
# pair matrix without dates
library(ggplot2)
plotmatrix(myD[,-1])
?plotmatrix
??plotmatrix
splom(~myD[,-1])
# pair matrix without dates
library(lattice)
splom(~myD[,-1])
knitr::opts_chunk$set(echo = TRUE, cache = T)
setwd("C:/Users/Jin/Dropbox/IIT/2018 FALL/MATH 564/Homework/HW6")
set.seed(999)
myData1
url1 <- "http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%2014%20Data%20Sets/CH14PR09.txt"
myData1 <- read.table(url1)
colnames(myData1)<-c("Y","X")
myData1
url3 <- "http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%2014%20Data%20Sets/CH14PR12.txt"
myData3 <- read.table(url3)
colnames(myData3)<-c("Y","X1", "n")
myData3
url3 <- "http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%2014%20Data%20Sets/CH14PR12.txt"
myData3 <- read.table(url3)
colnames(myData3)<-c("X","n", "Y")
myData3
url2 <- "http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%2014%20Data%20Sets/CH14PR13.txt"
myData2 <- read.table(url2)
colnames(myData2)<-c("Y","X1", "X2")
myData2
fit1 <- glm(Y~X,data=myData1,family=binomial("logit"))
summary(fit1)
plot(Y~X, myData1, pch = 19, col = "gray40")
with(df, seq(min(x), max(x), len = 200))
with(myData1, seq(min(X), max(X), len = 200))
??with
?with
xAxis <- with(myData1, seq(min(X), max(X), len = 100))
plot(Y~X, myData1, pch = 19, col = "gray40")
lines(xAxis, predict(loess(Y~X, myData1), data.frame(x = xAxis)), lty = 2, col = 'blue')
xAxis <- with(myData1, seq(min(X), max(X), len = 100))
plot(Y~X, myData1, pch = 19, col = "gray40")
lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
xAxis <- with(myData1, seq(min(X), max(X), len = 100))
plot(Y~X, myData1, pch = 19, col = "gray40")
lines(xAxis, predict(lowess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
??predict
?predict
r_O <- residuals(fit1, type="response") # ordinary residual
r_P <- residuals(fit1, type="pearson") # Pearson residual
X <- model.matrix(fit1)
W <- diag(fit1$weights)
r_O <- residuals(fit1, type="response") # ordinary residual
r_P <- residuals(fit1, type="pearson") # Pearson residual
X <- model.matrix(fit1)
W <- diag(fit1$weights)
W2 <- diag(sqrt(fit1$weights))
H <- W2%*%X%*%solve(t(X)%*%W%*%X)%*%t(X)%*%W2
r_SP <- residuals(fit1, type="pearson")/sqrt(1-diag(H))
r_D <- residuals(fit1, type="deviance") # Deviance residual
xAxis <- with(myData1, seq(min(X), max(X), len = 100))
plot(Y~X, myData1, pch = 19, col = "gray40")
# lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
lines(lowess(fit1$fitted.values,r_SP), col="blue")
lines(xAxis, predict(fit1, data.frame(X = xAxis), type = "resp"), lwd = 2)
title("Scatter Plot with Loess (blue) and Logistic Mean Response Functions")
# lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
lines(lowess(fit1$fitted.values,r_SP), col="blue")
xAxis <- with(myData1, seq(min(X), max(X), len = 100))
plot(Y~X, myData1, pch = 19, col = "gray40")
# lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
lines(lowess(fit1$fitted.values, r_SP), col="blue")
lines(xAxis, predict(fit1, data.frame(X = xAxis), type = "resp"), lwd = 2)
title("Scatter Plot with Lowess (blue) and Logistic Mean Response Functions")
xAxis <- with(myData1, seq(min(X), max(X), len = 100))
plot(Y~X, myData1, pch = 19, col = "gray40")
# lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
lines(lowess(fit1$fitted.values, r_SP), col="blue")
# lines(xAxis, predict(fit1, data.frame(X = xAxis), type = "resp"), lwd = 2)
title("Scatter Plot with Lowess (blue) and Logistic Mean Response Functions")
plot(Y~X, myData1, pch = 19, col = "gray40")
# lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
lines(lowess(fit1$fitted.values, r_SP), col="blue")
lines(xAxis, predict(fit1, data.frame(X = xAxis), type = "resp"), lwd = 2)
# lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
lines(xAxis, lowess(fit1$fitted.values, r_SP), col="blue")
# lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
lines(xAxis, lowess(fit1$fitted.values, r_SP), data.frame(X = xAxis), col="blue")
xAxis <- with(myData1, seq(min(X), max(X), len = 100))
plot(Y~X, myData1, pch = 19, col = "gray40")
# lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
lines(xAxis, lowess(fit1$fitted.values, r_SP), data.frame(X = xAxis), col="blue")
r_SP
lowess(fit1$fitted.values, r_SP)
# xAxis <- with(myData1, seq(min(X), max(X), len = 100))
plot(Y~X, myData1, pch = 19, col = "gray40")
# lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
lines(lowess(fit1$fitted.values, r_SP), col="blue")
lines(xAxis, predict(fit1, data.frame(X = xAxis), type = "resp"), lwd = 2)
title("Scatter Plot with Lowess (blue) and Logistic Mean Response Functions")
# xAxis <- with(myData1, seq(min(X), max(X), len = 100))
plot(Y~X, myData1, pch = 19, col = "gray40")
# lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
lines(lowess(fit1$fitted.values, r_SP), col="blue")
# lines(xAxis, predict(fit1, data.frame(X = xAxis), type = "resp"), lwd = 2)
title("Scatter Plot with Lowess (blue) and Logistic Mean Response Functions")
# lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
lines(lowess(fit1$fitted.values, r_SP), col="blue")
# xAxis <- with(myData1, seq(min(X), max(X), len = 100))
# plot(Y~X, myData1, pch = 19, col = "gray40")
plot(fit.full$fitted.values,r_SP,main="Studentized Pearson residuals vs probabilities",
xlab="Estimated Probability",ylab="Studentized Pearson Residuals")
# xAxis <- with(myData1, seq(min(X), max(X), len = 100))
# plot(Y~X, myData1, pch = 19, col = "gray40")
plot(fit1$fitted.values, r_SP, main="Studentized Pearson residuals vs probabilities",
xlab="Estimated Probability",ylab="Studentized Pearson Residuals")
# lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
lines(lowess(fit1$fitted.values, r_SP), col="blue")
# lines(xAxis, predict(fit1, data.frame(X = xAxis), type = "resp"), lwd = 2)
title("Scatter Plot with Lowess (blue) and Logistic Mean Response Functions")
# xAxis <- with(myData1, seq(min(X), max(X), len = 100))
# plot(Y~X, myData1, pch = 19, col = "gray40")
plot(fit1$fitted.values, r_SP, main="Studentized Pearson residuals vs probabilities",
xlab="Estimated Probability", ylab="Studentized Pearson Residuals")
# lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
lines(lowess(fit1$fitted.values, r_SP), col="blue")
# lines(xAxis, predict(fit1, data.frame(X = xAxis), type = "resp"), lwd = 2)
# title("Scatter Plot with Lowess (blue) and Logistic Mean Response Functions")
# xAxis <- with(myData1, seq(min(X), max(X), len = 100))
# plot(Y~X, myData1, pch = 19, col = "gray40")
plot(r_SP, fit1$fitted.values, main="Studentized Pearson residuals vs probabilities",
xlab="Estimated Probability", ylab="Studentized Pearson Residuals")
# lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
lines(lowess(fit1$fitted.values, r_SP), col="blue")
# lines(xAxis, predict(fit1, data.frame(X = xAxis), type = "resp"), lwd = 2)
# title("Scatter Plot with Lowess (blue) and Logistic Mean Response Functions")
# xAxis <- with(myData1, seq(min(X), max(X), len = 100))
# plot(Y~X, myData1, pch = 19, col = "gray40")
# plot(fit1$fitted.values, r_SP, main="Studentized Pearson residuals vs probabilities",
#      xlab="Estimated Probability", ylab="Studentized Pearson Residuals")
# lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
lines(lowess(fit1$fitted.values, r_SP), col="blue")
# xAxis <- with(myData1, seq(min(X), max(X), len = 100))
plot(Y~X, myData1, pch = 19, col = "gray40")
# plot(fit1$fitted.values, r_SP, main="Studentized Pearson residuals vs probabilities",
#      xlab="Estimated Probability", ylab="Studentized Pearson Residuals")
# lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
lines(lowess(fit1$fitted.values, r_SP), col="blue")
# lines(xAxis, predict(fit1, data.frame(X = xAxis), type = "resp"), lwd = 2)
# title("Scatter Plot with Lowess (blue) and Logistic Mean Response Functions")
myData1
lowess(fit1$fitted.values, r_SP)
# xAxis <- with(myData1, seq(min(X), max(X), len = 100))
# plot(Y~X, myData1, pch = 19, col = "gray40")
plot(fit1$fitted.values, r_SP, main="Studentized Pearson residuals vs probabilities",
xlab="Estimated Probability", ylab="Studentized Pearson Residuals")
# lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
lines(lowess(fit1$fitted.values, r_SP), col="blue")
# lines(xAxis, predict(fit1, data.frame(X = xAxis), type = "resp"), lwd = 2)
# title("Scatter Plot with Lowess (blue) and Logistic Mean Response Functions")
?lowess
xAxis <- with(myData1, seq(min(X), max(X), len = 100))
plot(Y~X, myData1, pch = 19, col = "gray40")
# plot(fit1$fitted.values, r_SP, main="Studentized Pearson residuals vs probabilities",
#      xlab="Estimated Probability", ylab="Studentized Pearson Residuals")
lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
# lines(lowess(fit1$fitted.values, r_SP), col="blue")
lines(xAxis, predict(fit1, data.frame(X = xAxis), type = "resp"), lwd = 2)
title("Scatter Plot with Lowess (blue) and Logistic Mean Response Functions")
exp(coef(fit1)[2])
coef(fit1)[2]
fit1 <- glm(Y~X,data=myData1,family=binomial("logit"))
summary(fit1)
fit1 <- glm(Y~X,data=myData1,family=binomial("logit"))
summary(fit1)
exp(coef(fit1)[2])
predict(fit1, 550)
fit1
predict(fit1, data.frame(550))
View(myData1)
predict(fit1, 550)
b0 <- coef(fit1)[1]
b1 <- coef(fit1)[2]
b0
b1
b0 <- coef(fit1)[1]
b1 <- coef(fit1)[2]
x_new <- 550
exp(b0+b1*x_new)/(1+exp(b0+b1*x_new))
predict(fit1, type = "response",newdata = list(x=550)))
predict(fit1, type = "response",newdata = list(x=550))
predict(fit1, type = "response", newdata = list(X=550))
# method 1
b0 <- coef(fit1)[1]
b1 <- coef(fit1)[2]
x_new <- 550
exp(b0+b1*x_new)/(1+exp(b0+b1*x_new))
# method 2
predict(fit1, type = "response", newdata = list(X=550))
piHat <- 0.7
x_70p <- (log(piHat/(1-piHat))-b1)/b0
x_70p
b0
piHat <- 0.7
x_70p <- (log(piHat/(1-piHat))-b0)/b1
x_70p
piHat <- 0.7
(log(piHat/(1-piHat))-b0)/b1
View(myData1)
fit_prob <- glm(y ~ x, data = df, family = binomial(link = "probit"))
summary(fit_prob)
fit_prob <- glm(y ~ x, data = df, family = binomial(link = "probit"))
fit_prob <- glm(Y ~ X, data = myData1, family = binomial(link = "probit"))
summary(fit_prob)
summary(fit_prob)
exp(0.011695)
fit2 <- glm(Y~X1+X2,data=myData2,family=binomial("logit"))
summary(fit2)
exp(coef(fit2)[2])
exp(coef(fit2)[3])
predict(fit2, type = "response", newdata = list(X1=50, X2=3))
url3 <- "http://users.stat.ufl.edu/~rrandles/sta4210/Rclassnotes/data/textdatasets/KutnerData/Chapter%2014%20Data%20Sets/CH14PR12.txt"
myData3 <- read.table(url3)
colnames(myData3)<-c("X","n", "Y")
plot(myData3$X, myData3$Y/myData3$n)
fit3 <- glm(Y~X,data=myData3,family=binomial("logit"))
myData3$p <- myData3$Y/myData3$n
myData3$p <- myData3$Y/myData3$n
fit3 <- glm(p~X,data=myData3,family=binomial("logit"))
summary(fit3)
myData3
summary(fit3)
xAxis <- with(myData3, seq(min(X), max(X), len = 100))
plot(p~X, myData3, pch = 19, col = "gray40")
# lines(xAxis, predict(loess(Y~X, myData1), data.frame(X = xAxis)), lty = 2, col = 'blue')
lines(xAxis, predict(fit3, data.frame(X = xAxis), type = "resp"), lwd = 2)
title("Scatter Plot with Logistic Mean Response Functions (Black)")
exp(coef(fit3)[2])
predict(fit3, type = "response", newdata = list(X=3.5))
b0 <- coef(fit3)[1]
b1 <- coef(fit3)[2]
piHat <- 0.7
(log(piHat/(1-piHat))-b0)/b1
b0 <- coef(fit3)[1]
b1 <- coef(fit3)[2]
piHat <- 0.7
(log(piHat/(1-piHat))-b0)/b1
b0 <- coef(fit3)[1]
b1 <- coef(fit3)[2]
piHat <- 0.5
(log(piHat/(1-piHat))-b0)/b1
